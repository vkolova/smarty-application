{"version":3,"file":"SentryProjectSelector.js","sourceRoot":"","sources":["../../../lib/Steps/SentryProjectSelector.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,qCAAqD;AACrD,0BAA4B;AAE5B,uCAAsC;AAEtC;IAA2C,yCAAQ;IAAnD;;IAkDA,CAAC;IAjDc,oCAAI,GAAjB,UAAkB,OAAgB;;;;;;wBAChC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;wBAEpB,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC,EAAE;4BAC7B,2DAA2D;4BAC3D,sBAAO,EAAE,EAAC;yBACX;wBAED,IAAI,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,iBAAiB,CAAC,IAAI,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;4BAC7E,MAAM,IAAI,KAAK,CAAC,aAAa,CAAC,CAAC;yBAChC;wBAEG,eAAe,GAAG,IAAI,CAAC;6BACvB,CAAA,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAA,EAApC,wBAAoC;wBACtC,eAAe,GAAG,EAAE,eAAe,EAAE,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC;;4BAEhD,qBAAM,iBAAM,CAAC;4BAC7B;gCACE,OAAO,EAAE,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAC,OAAY;oCAChD,OAAO;wCACL,IAAI,EAAK,OAAO,CAAC,YAAY,CAAC,IAAI,WAAM,OAAO,CAAC,IAAM;wCACtD,KAAK,EAAE,OAAO;qCACf,CAAC;gCACJ,CAAC,CAAC;gCACF,OAAO,EAAE,uCAAuC;gCAChD,IAAI,EAAE,iBAAiB;gCACvB,IAAI,EAAE,MAAM;6BACb;yBACF,CAAC,EAAA;;wBAZF,eAAe,GAAG,SAYhB,CAAC;;4BAGL,sBAAO;4BACL,MAAM,EAAE;gCACN,IAAI,EAAE;oCACJ,KAAK,EAAE,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,sBAAsB,EAAE,IAAI,CAAC;iCACpD;gCACD,GAAG,EAAE;oCACH,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,eAAe,EAAE,mCAAmC,EAAE,IAAI,CAAC;oCACzE,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,eAAe,EAAE,mCAAmC,EAAE,IAAI,CAAC;iCAC1E;gCACD,YAAY,EAAE;oCACZ,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,eAAe,EAAE,mCAAmC,EAAE,IAAI,CAAC;iCACxE;gCACD,OAAO,EAAE;oCACP,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,eAAe,EAAE,sBAAsB,EAAE,IAAI,CAAC;iCAC3D;6BACF;yBACF,EAAC;;;;KACH;IACH,4BAAC;AAAD,CAAC,AAlDD,CAA2C,mBAAQ,GAkDlD;AAlDY,sDAAqB","sourcesContent":["import { Answers, prompt, Question } from 'inquirer';\nimport * as _ from 'lodash';\nimport { dim } from '../Helper/Logging';\nimport { BaseStep } from './BaseStep';\n\nexport class SentryProjectSelector extends BaseStep {\n  public async emit(answers: Answers) {\n    this.debug(answers);\n\n    if (!_.has(answers, 'wizard')) {\n      // we skip this completly because the wizard wasn't running\n      return {};\n    }\n\n    if (_.has(answers, 'wizard.projects') && answers.wizard.projects.length === 0) {\n      throw new Error('no projects');\n    }\n\n    let selectedProject = null;\n    if (answers.wizard.projects.length === 1) {\n      selectedProject = { selectedProject: answers.wizard.projects[0] };\n    } else {\n      selectedProject = await prompt([\n        {\n          choices: answers.wizard.projects.map((project: any) => {\n            return {\n              name: `${project.organization.name} / ${project.name}`,\n              value: project,\n            };\n          }),\n          message: 'Please select your project in Sentry:',\n          name: 'selectedProject',\n          type: 'list',\n        },\n      ]);\n    }\n\n    return {\n      config: {\n        auth: {\n          token: _.get(answers, 'wizard.apiKeys.token', null),\n        },\n        dsn: {\n          public: _.get(selectedProject, 'selectedProject.keys.0.dsn.public', null),\n          secret: _.get(selectedProject, 'selectedProject.keys.0.dsn.secret', null),\n        },\n        organization: {\n          slug: _.get(selectedProject, 'selectedProject.organization.slug', null),\n        },\n        project: {\n          slug: _.get(selectedProject, 'selectedProject.slug', null),\n        },\n      },\n    };\n  }\n}\n"]}